syntax = "proto3";
package acm;


message RequestCreate {
    // @inject_tag: json:"title",validate:"required"
    string title = 1;
    // @inject_tag: json:"host",validate:"required"
    int32 host = 2;
    // @inject_tag: json:"description",validate:"required"
    string description = 3;
    // @inject_tag: json:"type",validate:"required"
    string type = 4;
    // @inject_tag: json:"reservationType",validate:"required|oneof=instant preApprove"
    string reservationType = 5;
    // @inject_tag: json:"placeType",validate:"required|oneof=personalRoom sharedRoom"
    string placeType = 6;
    // @inject_tag: json:"pricingType",validate:"required"
    string pricingType = 7;
    // @inject_tag: json:"minNight",validate:"required|number|min=1|max=99"
    int32 minNight = 8;
    message Capacity {
        message Beds {
            // @inject_tag: json:"twin",validate:"inumbernt"
            int32 twin = 1;
            // @inject_tag: json:"single",validate:"number"
            int32 single = 2;
            // @inject_tag: json:"double",validate:"number"
            int32 double = 3;
            // @inject_tag: json:"mattress",validate:"number"
            int32 mattress = 4;
        };
        // @inject_tag: json:"beds",validate:"required"
        Beds beds = 1;
        message Guests {
            // @inject_tag: json:"base",validate:"required|number|min=1"
            int32 base = 1;
            // @inject_tag: json:"extra",validate:"number"
            int32 extra = 2;
        }
        // @inject_tag: json:"guests",validate:"required"
        Guests guests = 2;
    };
    // @inject_tag: json:"capacity",validate:"required"
    Capacity capacity = 9;

}
message RequestDetails {
    string id = 1;
}

message ResponseDetails {
    string id = 1;
    string title = 2;
    int32 host = 3;
    string description = 4;
    string type = 5;
    string reservationType = 6;
    string placeType = 7;
    string pricingType = 8;
    int32 minNight = 9;
}


service AcmService {
    rpc Create(RequestCreate) returns (ResponseDetails) {}
    rpc Details(RequestDetails) returns (ResponseDetails) {}
}